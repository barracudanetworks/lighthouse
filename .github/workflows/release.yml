# This was heavily inspired by the build actions for clojure-lsp. Many thanks
# to Eric Dallo for blazing the trail.

name: Release

on:
  push:
    tags:
      - v*

jobs:
  check:
    name: Ensure consistency in release metadata
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Install Babashka
        run: curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install | sudo bash
      - name: Check that version matches tag
        run: bb check-version ${{ steps.get_version.outputs.VERSION }}

  build-jar:
    name: Build Uber Jar
    runs-on: ubuntu-latest
    needs: [check]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Setup Clojure
        uses: DeLaGuardo/setup-clojure@3.5
        with:
          lein: latest
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: "m2-repo-${{ hashFiles('project.clj') }}"
      - name: Run uberjar
        run: lein uberjar
      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          path: target/lighthouse.jar
          name: lighthouse.jar

  macos-amd64:
    name: Build MacOS native binary
    runs-on: macos-latest
    needs: [build-jar]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: lighthouse.jar
      - name: Debugging
        run: ls -R
      - name: Install GraalVM
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm: 21.3.1
          java: java11
      - name: Build native image
        env:
          THE_JAR: lighthouse.jar
          THE_XMX: "-J-Xmx4500m"
        run: ./script/compile
      - name: Zip up binary
        run: zip lighthouse-native-macos-amd64.zip lh
      - name: Upload binary zip
        uses: actions/upload-artifact@v2
        with:
          path: lighthouse-native-macos-amd64.zip
          name: lighthouse-native-macos-amd64.zip

  linux-amd64:
    name: Build Linux native binary
    runs-on: ubuntu-latest
    needs: [build-jar]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: lighthouse.jar
      - name: Debugging
        run: ls -R
      - name: Install GraalVM
        uses: DeLaGuardo/setup-graalvm@master
        with:
          graalvm: 21.3.1
          java: java11
      - name: Build native image
        env:
          THE_JAR: lighthouse.jar
          THE_XMX: "-J-Xmx4500m"
          IS_STATIC: "true"
        run: ./script/compile
      - name: Zip up binary
        run: zip lighthouse-native-linux-amd64.zip lh
      - name: Upload binary zip
        uses: actions/upload-artifact@v2
        with:
          path: lighthouse-native-linux-amd64.zip
          name: lighthouse-native-linux-amd64.zip

  upload-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [build-jar, macos-amd64, linux-amd64]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Display version
        run: echo ${{ steps.get_version.outputs.VERSION }}

      - name: Install Babashka
        run: curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install | sudo bash

      - name: Get changelog entry
        id: changelog
        run: |
          echo 'CHANGELOG_BODY<<EOF' >> $GITHUB_ENV
          bb get-changelog-entry ${{ steps.get_version.outputs.VERSION }} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ env.CHANGELOG_BODY }}
          prerelease: ${{ contains(steps.get_version.outputs.VERSION, 'pre') }}
          files: |
            lighthouse.jar/lighthouse.jar
            lighthouse-native-macos-amd64.zip/lighthouse-native-macos-amd64.zip
            lighthouse-native-linux-amd64.zip/lighthouse-native-linux-amd64.zip
